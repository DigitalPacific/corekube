  heat_template_version: 2015-04-30

  description: >
    Deploy Kubernetes on a CoreOS cluster that operates on an
    OpenStack Powered Cloud (Openstack Kilo)
    Maintainer - Shaun Smekel <shaunsmekel@digitalpacific.com.au> | Github: @the0rem

  parameters:
    kubernetes_minion_count:
      description: Number of CoreOS machines to deploy as Kubernetes Minion
      type: number
      default: 3
      constraints:
      - range:
          min: 1
          max: 12
        description: Must be between 2 and 12 servers.
    keyname:
      type: string
      description: Name of keypair to be used for compute instance
    discovery_flavor:
      type: string
      default: m1.tiny
      constraints:
      - allowed_values:
        - m1.tiny
        - m1.small
        - m1.medium
        - m1.large
        - m1.xlarge
        description: |
          Must be a valid flavor
    overlord_flavor:
      type: string
      default: m1.tiny
      constraints:
      - allowed_values:
        - m1.tiny
        - m1.small
        - m1.medium
        - m1.large
        - m1.xlarge
        description: |
          Must be a valid flavor
    master_flavor:
      type: string
      default: m1.tiny
      constraints:
      - allowed_values:
        - m1.tiny
        - m1.small
        - m1.medium
        - m1.large
        - m1.xlarge
        description: |
          Must be a valid flavor
    minion_flavor:
      type: string
      default: m1.tiny
      constraints:
      - allowed_values:
        - m1.tiny
        - m1.small
        - m1.medium
        - m1.large
        - m1.xlarge
        description: |
          Must be a valid flavor
    coreos_image:
      type: string
      description: CoreOS Alpha (633.1.0)
      default: "CoreOS"
    git_command:
      type: string
      description: Git repo checkout command
      default: "/usr/bin/git clone https://github.com/DigitalPacific/overlord.git"
    flannel_url:
      type: string
      description: Flannel Binary URL
      default: "http://a26736f09be9784cb06f-8d30bd32035bc1ac3e9215d2d6eedfc5.r53.cf1.rackcdn.com/flanneld"
    discovery_net_interface:
      type: string
      description: Host network interface for which the Discovery node will operate over
      default: "eth0"
    kubernetes_net_interface:
      type: string
      description: Host network interface for which Kubernetes' overlay will operate over
      default: "eth0"
    timeout:
      description: Wait condition timeout seconds
      type: number
      default: 600
    floating-network-id:
      type: string
      label: Floating Network ID
      description: UUID of the external network. The private network created by this stack will route to this network. Any floating IP addresses needed by this stack will also route to this network. 

  resources:

    coreos_cluster_uuid:
      type: OS::Heat::RandomString

    stack_security:
      type: OS::Neutron::SecurityGroup
      properties:
        name: "corekube"
        rules:
          - remote_ip_prefix: 0.0.0.0/0
            protocol: tcp
            port_range_min: 0
            port_range_max: 65535
          - remote_ip_prefix: 0.0.0.0/0
            protocol: udp
            port_range_min: 0
            port_range_max: 65535
          - remote_ip_prefix: 0.0.0.0/0
            protocol: icmp

    corekube_network:
      type: OS::Neutron::Net
      properties:
        name: "corekube"
        # network_type: "vlan"
        # physical_network: "vlan"

    corekube_subnet:
      type: OS::Neutron::Subnet
      properties:
        name: "corekube_subnet"
        network_id:
          get_resource: corekube_network
        cidr: "10.10.10.0/24"
        gateway_ip: "10.10.10.1"
        allocation_pools: [{"start": "10.10.10.2", "end": "10.10.10.254"}]
        dns_nameservers:
          - 8.8.8.8
          - 8.8.4.4

    corekube_router:
      type: OS::Neutron::Router
      properties:
        name: "corekube_router"
        external_gateway_info:
          enable_snat: true
          network:
            get_param: floating-network-id

    corekube_router_interface:
      type: OS::Neutron::RouterInterface
      properties:
        router_id:
          get_resource: corekube_router
        subnet_id:
          get_resource: corekube_subnet

    discovery_wait_handle:
      type: OS::Heat::WaitConditionHandle

    discovery_wait_condition:
      type: OS::Heat::WaitCondition
      properties:
        handle: { get_resource: discovery_wait_handle }
        timeout: { get_param: timeout }

    discovery_floatingip:
      type: OS::Neutron::FloatingIP
      properties:
        floating_network_id:
          get_param: floating-network-id

    discovery_port:
      type: OS::Neutron::Port
      properties:
        security_groups:
          - get_resource: stack_security
        network_id:
          get_resource: corekube_network

    discovery_floatingip_association:
      type: OS::Neutron::FloatingIPAssociation
      properties:
        floatingip_id:
          get_resource: discovery_floatingip
        port_id:
          get_resource: discovery_port

    discovery:
      type: OS::Nova::Server
      properties:
        key_name: { get_param: keyname }
        image: { get_param: coreos_image }
        flavor: { get_param: discovery_flavor }
        name: "discovery"
        networks:
          - port:
              get_resource: discovery_port
        user_data_format: RAW
        config_drive: true
        user_data:
          str_replace:
            template: 
              get_file: https://raw.githubusercontent.com/DigitalPacific/corekube/master/cloud-config/discovery.yaml
            params:
              "%wc_notify%": { get_attr: [discovery_wait_handle, curl_cli] }
              "%discovery_net_interface%": { get_param: discovery_net_interface }

    overlord_wait_handle:
      type: OS::Heat::WaitConditionHandle

    overlord_wait_condition:
      type: OS::Heat::WaitCondition
      properties:
        handle: {get_resource: overlord_wait_handle}
        timeout: {get_param: timeout}

    overlord_floatingip:
      type: OS::Neutron::FloatingIP
      properties:
        floating_network_id:
          get_param: floating-network-id

    overlord_port:
      type: OS::Neutron::Port
      properties:
        security_groups:
          - get_resource: stack_security
        network_id:
          get_resource: corekube_network

    overlord_floatingip_association:
      type: OS::Neutron::FloatingIPAssociation
      properties:
        floatingip_id:
          get_resource: overlord_floatingip
        port_id:
          get_resource: overlord_port

    overlord:
      type: OS::Nova::Server
      properties:
        key_name: { get_param: keyname }
        image: { get_param: coreos_image }
        flavor: { get_param: overlord_flavor }
        name: "overlord"
        networks:
          - port:
              get_resource: overlord_port
        user_data_format: RAW
        config_drive: "true"
        user_data:
          str_replace:
            template: 
              get_file: https://raw.githubusercontent.com/DigitalPacific/corekube/master/cloud-config/overlord.yaml
            params:
              "%discovery%": { get_attr: [discovery, networks, corekube, 0] }
              "%uuid%": { get_attr: [coreos_cluster_uuid, value] }
              "%git_command%": { get_param: git_command }
              "%wc_notify%": { get_attr: [overlord_wait_handle, curl_cli] }

    kubernetes_master_floatingip:
      type: OS::Neutron::FloatingIP
      properties:
        floating_network_id:
          get_param: floating-network-id

    kubernetes_master_port:
      type: OS::Neutron::Port
      properties:
        security_groups:
          - get_resource: stack_security
        network_id:
          get_resource: corekube_network

    kubernetes_master_floatingip_association:
      type: OS::Neutron::FloatingIPAssociation
      properties:
        floatingip_id:
          get_resource: kubernetes_master_floatingip
        port_id:
          get_resource: kubernetes_master_port

    kubernetes_master:
      type: OS::Nova::Server
      properties:
        key_name: { get_param: keyname }
        image: { get_param: coreos_image }
        flavor: { get_param: master_flavor }
        name: "kubernetes_master"
        networks:
          - port:
              get_resource: kubernetes_master_port
        user_data_format: RAW
        config_drive: "true"
        user_data:
          str_replace:
            template: 
              get_file: https://raw.githubusercontent.com/DigitalPacific/corekube/master/cloud-config/kubernetes-master.yaml
            params:
              "%discovery%": { get_attr: [discovery, networks, corekube, 0] }
              "%uuid%": { get_attr: [coreos_cluster_uuid, value] }
              "%flannel_url%": { get_param: flannel_url }
              "%kubernetes_net_interface%": { get_param: kubernetes_net_interface }

    kubernetes_minions:
      type: "OS::Heat::ResourceGroup"
      properties:
        count: { get_param: kubernetes_minion_count }
        resource_def:
          type: OS::Nova::Server
          properties:
            key_name: { get_param: keyname }
            image: { get_param: coreos_image }
            flavor: { get_param: minion_flavor }
            name: kubernetes_minion_%index%
            networks:
              - network: { get_resource: corekube_network }
            security_groups:
              - get_resource: stack_security
            user_data_format: RAW
            config_drive: "true"
            user_data:
              str_replace:
                template:
                  get_file: https://raw.githubusercontent.com/DigitalPacific/corekube/master/cloud-config/kubernetes-minion.yaml
                params:
                  "%discovery%": { get_attr: [discovery, networks, corekube, 0] }
                  "%uuid%": { get_attr: [coreos_cluster_uuid, value] }
                  "%flannel_url%": { get_param: flannel_url }
                  "%kubernetes_net_interface%": { get_param: kubernetes_net_interface }

  outputs:
    discovery_ip:
      value: { get_attr: [ discovery, first_address ] }
      description: The IP of the Discovery
    overlord_ip:
      value: { get_attr: [ overlord, first_address ] }
      description: The IP of the Overlord
    master_ip:
      value: { get_attr: [ kubernetes_master, first_address ] }
      description: The IP of the Kubernetes Master
    minion_ips:
      value: { get_attr: [ kubernetes_minions, first_address ] }
      description: The IP of the Kubernetes Minions
